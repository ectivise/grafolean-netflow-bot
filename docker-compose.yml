version: '2.1'
services:

  #
  # Welcome to Grafolean NetFlow bot!
  #
  # This file should be modified to suit your running environment. Please check the comments and change
  # the settings appropriately.
  #

  netflowbot:
    # If you wish to load an explicit version, change the next line. For example:
    #   image: grafolean/grafolean-netflow-bot:v1.0.0
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-bot
    depends_on:
      redis:
        condition: service_healthy
    environment:
      # Backend url must be set to the address of the Grafolean backend, for example this uses Grafolean hosted service:
      # - BACKEND_URL=https://grafolean.com/api
      # IMPORTANT: '127.0.0.1' and 'localhost' are _never_ correct addresses for Grafolean backend, because they translate
      # to container, not host.
      - BACKEND_URL=${BACKEND_URL}
      # To use NetFlow bot, a bot with the protocol "netflow" must be added via user interface, then the token needs to be copied here:
      - BOT_TOKEN=${BOT_TOKEN}
      # Interval between fetching information about jobs:
      - JOBS_REFRESH_INTERVAL=${JOBS_REFRESH_INTERVAL:-60}
      - REDIS_HOST=redis
    restart: always
    networks:
      - grafolean


  redis:
    image: redis:5-alpine
    container_name: grafolean-netflow-bot-redis
    restart: always
    entrypoint: redis-server --appendonly yes
    volumes:
      # You should save Redis data to a host directory unless you are prepared to lose history
      # whenever container restarts. By default the location of data is '/grafolean/redis/'.
      - ${REDIS_DIR:-/grafolean/redis/}:/data/
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - grafolean


  netflowcollector:
    # This process collects NetFlow data and writes it to a shared named pipe. The
    # reason is that there is a Docker bug which causes UDP packets to change the source
    # IP if processed within the Docker network. To avoid that, we have a collector
    # listening on host network interface, then transferring the JSON-encoded data
    # to a "writer" process within the network, which writes the data to DB.
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-collector
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NAMED_PIPE_FILENAME=/shared-grafolean/netflow.pipe
      - NETFLOW_PORT=2055
    ports:
      - "${NETFLOW_PORT:-2055}:2055/udp"
    restart: always
    # NetFlow collector uses the same docker image as bot (grafolean/grafolean-netflow-bot),
    # but specifies a different entrypoint:
    entrypoint:
      - python
      - -m
      - netflowcollector
    volumes:
      - shared-grafolean:/shared-grafolean
    network_mode: "host"


  netflowwriter:
    # Reads netflow data from named pipe and writes it to DB.
    image: grafolean/grafolean-netflow-bot
    container_name: grafolean-netflow-writer
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - NAMED_PIPE_FILENAME=/shared-grafolean/netflow.pipe
      - REDIS_HOST=redis
    restart: always
    # CAREFUL: NetFlow collector uses the same docker image as bot
    # (grafolean/grafolean-netflow-bot), but specifies a different entrypoint:
    entrypoint:
      - python
      - -m
      - netflowwriter
    volumes:
      - shared-grafolean:/shared-grafolean
    # To use py-spy:
    #   - $ docker exec -ti grafolean-newflow-writer bash
    #   - # pip install py-spy
    #   - # py-spy -n -o /tmp/prof/out.svg --pid 1
    # But first, these 3 lines below must be enabled, to add a volume and capabilities: (careful not to add spaces!)
    #  - /tmp/prof/:/tmp/prof/
    #cap_add:
    #  - SYS_PTRACE
    networks:
      - grafolean


  autoheal:
    # This container automatically restarts any container that fails its health check. Not a bullet-proof solution, but better than nothing.
    image: willfarrell/autoheal
    container_name: grafolean-netflow-bot-autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    networks:
      - grafolean


networks:
  grafolean:

# We need a shared volume for a named pipe:
volumes:
  shared-grafolean:
